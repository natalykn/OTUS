//
// AnimeImagesWebp.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Available images in WEBP */
public struct AnimeImagesWebp: Codable, Hashable {

    /** Image URL WEBP (225x335) */
    public var imageUrl: String?
    /** Small Image URL WEBP (50x74) */
    public var smallImageUrl: String?
    /** Image URL WEBP (300x446) */
    public var largeImageUrl: String?

    public init(imageUrl: String? = nil, smallImageUrl: String? = nil, largeImageUrl: String? = nil) {
        self.imageUrl = imageUrl
        self.smallImageUrl = smallImageUrl
        self.largeImageUrl = largeImageUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case imageUrl = "image_url"
        case smallImageUrl = "small_image_url"
        case largeImageUrl = "large_image_url"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(imageUrl, forKey: .imageUrl)
        try container.encodeIfPresent(smallImageUrl, forKey: .smallImageUrl)
        try container.encodeIfPresent(largeImageUrl, forKey: .largeImageUrl)
    }
}

