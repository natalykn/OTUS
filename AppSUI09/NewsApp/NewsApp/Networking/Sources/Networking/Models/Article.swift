//
// Article.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Article: Codable, Hashable {

    public var author: String?
    public var content: String?
    public var date: String?
    public var urlToImage: String?
    public var readMoreUrl: String?
    public var time: String?
    public var title: String?
    public var url: String

    public init(author: String? = nil, content: String? = nil, date: String? = nil, urlToImage: String? = nil, readMoreUrl: String? = nil, time: String? = nil, title: String? = nil, url: String) {
        self.author = author
        self.content = content
        self.date = date
        self.urlToImage = urlToImage
        self.readMoreUrl = readMoreUrl
        self.time = time
        self.title = title
        self.url = url
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case author
        case content
        case date
        case urlToImage
        case readMoreUrl
        case time
        case title
        case url
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(author, forKey: .author)
        try container.encodeIfPresent(content, forKey: .content)
        try container.encodeIfPresent(date, forKey: .date)
        try container.encodeIfPresent(urlToImage, forKey: .urlToImage)
        try container.encodeIfPresent(readMoreUrl, forKey: .readMoreUrl)
        try container.encodeIfPresent(time, forKey: .time)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encode(url, forKey: .url)
    }
}
