//
// Trailer.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Youtube Details */
public struct Trailer: Codable, Hashable {

    /** YouTube ID */
    public var youtubeId: String?
    /** YouTube URL */
    public var url: String?
    /** Parsed Embed URL */
    public var embedUrl: String?
    public var images: TrailerImagesImages?

    public init(youtubeId: String? = nil, url: String? = nil, embedUrl: String? = nil, images: TrailerImagesImages? = nil) {
        self.youtubeId = youtubeId
        self.url = url
        self.embedUrl = embedUrl
        self.images = images
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case youtubeId = "youtube_id"
        case url
        case embedUrl = "embed_url"
        case images
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(youtubeId, forKey: .youtubeId)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(embedUrl, forKey: .embedUrl)
        try container.encodeIfPresent(images, forKey: .images)
    }
}

